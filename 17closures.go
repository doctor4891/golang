//////////////// CLOSURES ЗАМЫКАНИЯ //////////////////////
//значение названия
// По сути это анонимная функция внутри именованной, но область видимости
//переменных распространяется (замыкается) везде по именованной функции в том
// числе и внутри анонимной функции
//значение состояния переменных внутри замыкания сохраняется
package main

import "fmt"

func closure(x int) func() int {
	x = x + 1
	return func() int {
		x++
		return x //x будет виден здесь
	}
}

func main() {
	myFunc := closure(1)
	fmt.Println(myFunc()) //3
	fmt.Println(myFunc()) //4 - потому что значение x было сохранено с предыдущего раза
	// внутри анонимной функции,
	// это происходит потому что анонимная функция как значение записана в ячейке памяти
	fmt.Println(myFunc()) //5
}
